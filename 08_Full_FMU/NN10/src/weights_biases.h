#ifndef WEIGHTS_BIASES_H
#define WEIGHTS_BIASES_H

#include <vector>

namespace NeuralNetworkParams {
	const std::vector<std::vector<std::vector<double>>> weights = {
		// layers_0 weights
		{
			{-4.554915114922434, -0.6098151868798253, 1.108823372387062, -6.337996525182407, 1.9317254313112275, -3.142551115982035, -5.17543949766279, 4.758721435107935, -0.9459048307930844, -7.6564127288284425, 1.1319056546884914, 1.2681044726603279, 2.1707964594412292, -0.3427818737891224, -3.989492003610983},
			{2.9340694947256494, 0.2551442943725389, -0.17589746997173694, -1.4296698505872636, 5.473215755069624, 2.3244245484781993, 1.0136059654683531, 1.1314653830130106, -2.7129101544275844, 1.356109958318744, 1.278925387691479, -1.3954686959841889, -0.09675585619490923, 2.803386910233811, -1.8159193267550013},
		},
		// layers_1 weights
		{
			{0.07159923073269076},
			{-3.02097429393235},
			{5.429714945721446},
			{0.11417570545046211},
			{-3.2656422115462873},
			{2.0001122462838716},
			{-4.396358719347618},
			{0.6344913747013458},
			{-3.9524159100437464},
			{-0.6019835709056911},
			{-0.5821187573227234},
			{-0.5072320228332606},
			{-2.5657223825750957},
			{6.206093094336166},
			{5.504994900042522},
		},
	};

	const std::vector<std::vector<double>> biases = {
		// layers_0 biases
		{4.952377207812762, -1.1697188123095972, -0.45429804824223724, -8.284963662296015, -2.639643581135353, 1.2320611882799735, -6.010316729623631, 1.743164068215894, -5.7557959204166655, -3.402273871405008, 2.513164393133665, 5.6571871076896505, -2.0585112240973205, -2.9833915390320715, -5.2056712536428185},
		// layers_1 biases
		{-1.6648023821865021},
	};
}
std::vector<int> layer_sizes = {2, 15, 1};

#endif
