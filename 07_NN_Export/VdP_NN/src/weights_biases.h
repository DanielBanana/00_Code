#ifndef WEIGHTS_BIASES_H
#define WEIGHTS_BIASES_H

#include <vector>

namespace NeuralNetworkParams {
	const std::vector<std::vector<std::vector<double>>> weights = {
		// layers_0 weights
		{
			{0.6257525682449341, -0.1686379313468933, 0.5408272743225098, -0.6531203985214233, 1.1094194650650024, 0.6023625135421753, -0.4656303822994232, -1.4945087432861328, -0.5618070363998413, 0.03652605041861534, -0.5293852090835571, 0.26381686329841614, 0.0996280238032341, 0.2559114694595337, -0.4430352449417114},
			{-0.3360821306705475, -0.3031119406223297, 0.368232399225235, -0.4779869616031647, 0.11328839510679245, -0.0056996759958565235, 1.0148338079452515, 0.7177498936653137, -0.4689256250858307, 0.29390642046928406, 0.08611719310283661, 0.25177061557769775, 1.1013466119766235, -0.5528866052627563, -0.2579902410507202},
		},
		// layers_1 weights
		{
			{-0.004453603643923998},
			{-0.3962804675102234},
			{-0.27417638897895813},
			{0.14833204448223114},
			{0.24989917874336243},
			{0.35478100180625916},
			{-0.04752181097865105},
			{0.212912917137146},
			{-0.23778583109378815},
			{-0.2384791225194931},
			{-0.21377171576023102},
			{0.030292389914393425},
			{-0.21581867337226868},
			{-0.04918770119547844},
			{0.17630505561828613},
		},
	};

	const std::vector<std::vector<double>> biases = {
		// layers_0 biases
		{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
		// layers_1 biases
		{0.0},
	};
}

#endif
